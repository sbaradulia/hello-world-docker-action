// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036

// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097

// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace Whatever
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalSystemTextJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalTypeConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.Decimal, Value = { _value }")]
    public sealed partial record class _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal : global::System.IEquatable<_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal>, global::System.IEquatable<System.Decimal>,  global::System.IComparable<_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal>, global::System.IComparable
    {
#if DEBUG   
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly System.Decimal _value;
        
        /// <summary>
        /// Gets the underlying <see cref="System.Decimal" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
        /// </summary>
        public System.Decimal Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            init
            {
                

                

                

                _value = value;
            }
        }


        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal(System.Decimal value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal From(System.Decimal value)
        {
            

            

            

            _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal instance = new _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal(value);

            return instance;
        }
  
        // only called internally when something has been deserialized into
        // its primitive type.
        private static _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal Deserialize(System.Decimal value)
        {
            

            

            

            return new _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal(value);
        }
        
            public  global::System.Boolean Equals(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal other)
            {
              if (ReferenceEquals(null, other))
              {
                  return false;
              }

              // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
              // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
              if(!_isInitialized || !other._isInitialized) return false;

              if (ReferenceEquals(this, other))
              {
                  return true;
              }

              return GetType() == other.GetType() && global::System.Collections.Generic.EqualityComparer<System.Decimal>.Default.Equals(Value, other.Value);
            }
             public global::System.Boolean Equals(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal other, global::System.Collections.Generic.IEqualityComparer<_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal> comparer)
             {
                 return comparer.Equals(this, other);
             }

             
            public global::System.Boolean Equals(System.Decimal primitive)
            {
              return Value.Equals(primitive);
            }


        public static global::System.Boolean operator ==(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal left, System.Decimal right) => Equals(left.Value, right);
        public static global::System.Boolean operator !=(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal left, System.Decimal right) => !Equals(left.Value, right);

        public static global::System.Boolean operator ==(System.Decimal left, _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal right) => Equals(left, right.Value);
        public static global::System.Boolean operator !=(System.Decimal left, _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal right) => !Equals(left, right.Value);

        public static explicit operator _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal(System.Decimal value) => From(value);
        public static explicit operator System.Decimal(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal value) => value.Value;

        public int CompareTo(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal other) => Value.CompareTo(other.Value);
        public int CompareTo(object other) {
            if(other is null) return 1;
            if(other is _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal x) return CompareTo(x);
            throw new global::System.ArgumentException("Cannot compare to object as it is not of type _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal", nameof(other));
        }

        
    /// <inheritdoc cref="decimal.TryParse(string, out decimal)"/>
    /// <summary>
    /// </summary>
    /// <returns>
    /// True if the value could a) be parsed by the underlying type, and b) passes any validation (after running any optional normalization).
    /// </returns>
    public static global::System.Boolean TryParse(string s, 
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
 out _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal result) {
        if(System.Decimal.TryParse(s, out var __v)) {
            
            
            result = new _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal(__v);
            return true;
        }

        result = default;
        return false;
    }

    /// <inheritdoc cref="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)"/>
    /// <summary>
    /// </summary>
    /// <returns>
    /// True if the value could a) be parsed by the underlying type, and b) passes any validation (after running any optional normalization).
    /// </returns>
    public static global::System.Boolean TryParse(string s, global::System.Globalization.NumberStyles style, global::System.IFormatProvider provider, 
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
 out _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal result) {
        if(System.Decimal.TryParse(s, style, provider, out var __v)) {
            
            
            result = new _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal(__v);
            return true;
        }

        result = default;
        return false;
    }

    /// <inheritdoc cref="decimal.Parse(string)"/>
    /// <summary>
    /// </summary>
    /// <returns>
    /// The value created via the <see cref="From"/> method.
    /// </returns>
    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>
    public static _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal Parse(string s) {
        var r = System.Decimal.Parse(s);
        return From(r);
    }

    /// <inheritdoc cref="decimal.Parse(string, System.Globalization.NumberStyles)"/>
    /// <summary>
    /// </summary>
    /// <returns>
    /// The value created via the <see cref="From"/> method.
    /// </returns>
    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>
    public static _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal Parse(string s, global::System.Globalization.NumberStyles style) {
        var r = System.Decimal.Parse(s, style);
        return From(r);
    }

    /// <inheritdoc cref="decimal.Parse(string, System.IFormatProvider)"/>
    /// <summary>
    /// </summary>
    /// <returns>
    /// The value created via the <see cref="From"/> method.
    /// </returns>
    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>
    public static _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal Parse(string s, global::System.IFormatProvider provider) {
        var r = System.Decimal.Parse(s, provider);
        return From(r);
    }

    /// <inheritdoc cref="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)"/>
    /// <summary>
    /// </summary>
    /// <returns>
    /// The value created via the <see cref="From"/> method.
    /// </returns>
    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>
    public static _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal Parse(string s, global::System.Globalization.NumberStyles style, global::System.IFormatProvider provider) {
        var r = System.Decimal.Parse(s, style, provider);
        return From(r);
    }



          public override global::System.Int32 GetHashCode()
          {
            unchecked // Overflow is fine, just wrap
            {
                global::System.Int32 hash = (global::System.Int32) 2166136261;
                hash = (hash * 16777619) ^ GetType().GetHashCode();
                hash = (hash * 16777619) ^ global::System.Collections.Generic.EqualityComparer<System.Decimal>.Default.GetHashCode(Value);
                return hash;
            }
          }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        // record enumerates fields - we just want our Value and to throw if it's not initialized.
        /// <summary>Returns the string representation of the underlying <see cref="System.Decimal" />.</summary>
    /// <inheritdoc cref="System.Decimal.ToString()" />
    public override global::System.String ToString() => _isInitialized ? Value.ToString() : "[UNINITIALIZED]";

        
        class _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal>
        {
            public override _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
#if NET5_0_OR_GREATER
                return _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal.Deserialize(
                    options.NumberHandling == global::System.Text.Json.Serialization.JsonNumberHandling.AllowReadingFromString && reader.TokenType == global::System.Text.Json.JsonTokenType.String
                    ? global::System.Decimal.Parse(reader.GetString(), global::System.Globalization.NumberStyles.Any, global::System.Globalization.CultureInfo.InvariantCulture)
                    : reader.GetDecimal()
                );
#else
                return _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal.Deserialize(reader.GetDecimal());
#endif
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WriteNumberValue(value.Value);
            }

#if NET6_0_OR_GREATER
            public override _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal.Deserialize(global::System.Decimal.Parse(reader.GetString(), global::System.Globalization.NumberStyles.Any, global::System.Globalization.CultureInfo.InvariantCulture));
            }

            public override void WriteAsPropertyName(System.Text.Json.Utf8JsonWriter writer, _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WritePropertyName(value.Value.ToString(global::System.Globalization.CultureInfo.InvariantCulture));
            }
#endif            
        }


        class _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalTypeConverter : global::System.ComponentModel.TypeConverter
        {
            public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(global::System.Decimal) || sourceType == typeof(global::System.String) || base.CanConvertFrom(context, sourceType);
            }

            public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)
            {
                return value switch
                {
                    global::System.Decimal decimalValue => _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal.Deserialize(decimalValue),
                    global::System.String stringValue when !global::System.String.IsNullOrEmpty(stringValue) && global::System.Decimal.TryParse(stringValue, global::System.Globalization.NumberStyles.Number, culture.NumberFormat, out var result) => _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal.Deserialize(result),
                    _ => base.ConvertFrom(context, culture, value),
                };
            }

            public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(global::System.Decimal) || sourceType == typeof(global::System.String) || base.CanConvertTo(context, sourceType);
            }

            public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, System.Type destinationType)
            {
                if (value is _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal idValue)
                {
                    if (destinationType == typeof(global::System.Decimal))
                    {
                        return idValue.Value;
                    }

                    if (destinationType == typeof(global::System.String))
                    {
                        return idValue.Value.ToString(culture);
                    }
                }

                return base.ConvertTo(context, culture, value, destinationType);
            }
        }





        internal sealed class _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalDebugView
        {
            private readonly _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal _t;

            _casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalDebugView(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_Explicitdecimal t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.Decimal";
            public System.Decimal Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalSystemTextJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(_casting_public_sealed_partial_recordCastOperator_ExplicitCastOperator_ExplicitdecimalTypeConverter))]
";
                }
    }

}